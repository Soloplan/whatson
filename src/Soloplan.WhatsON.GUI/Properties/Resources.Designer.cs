//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Soloplan.WhatsON.GUI.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Soloplan.WhatsON.GUI.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export.
        /// </summary>
        public static string Export {
            get {
                return ResourceManager.GetString("Export", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import.
        /// </summary>
        public static string Import {
            get {
                return ResourceManager.GetString("Import", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import/Export.
        /// </summary>
        public static string ImportExport {
            get {
                return ResourceManager.GetString("ImportExport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Json files.
        /// </summary>
        public static string JsonFilesFilterName {
            get {
                return ResourceManager.GetString("JsonFilesFilterName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;nlog xmlns=&quot;http://www.nlog-project.org/schemas/NLog.xsd&quot;
        ///      xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
        ///      autoReload=&quot;true&quot;
        ///      throwExceptions=&quot;true&quot;
        ///      keepVariablesOnReload=&quot;true&quot;&gt;
        ///
        ///  &lt;targets&gt;
        ///    &lt;target name=&quot;whatsONMainLog&quot;
        ///            xsi:type=&quot;File&quot;
        ///            fileName=&quot;${var:logFileDir}/whatsON.log&quot;
        ///            archiveFileName=&quot;${var:logFileDir}/archives/{#####}.zip&quot;
        ///            layout=&quot;${longdate} ${level} ${callsite}:${ [rest of string was truncated]&quot;;.
        /// </summary>
        public static string LogConfig {
            get {
                return ResourceManager.GetString("LogConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to not installed.
        /// </summary>
        public static string NotInstalled {
            get {
                return ResourceManager.GetString("NotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value is required..
        /// </summary>
        public static string ValueIsRequired {
            get {
                return ResourceManager.GetString("ValueIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        public static System.Drawing.Icon Whatson {
            get {
                object obj = ResourceManager.GetObject("Whatson", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap whatsONx16 {
            get {
                object obj = ResourceManager.GetObject("whatsONx16", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
