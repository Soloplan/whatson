<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:jenkins="clr-namespace:Soloplan.WhatsON.Jenkins.GUI;assembly=Soloplan.WhatsON.Jenkins.GUI"
                    xmlns:subjectTreeView="clr-namespace:Soloplan.WhatsON.GUI.SubjectTreeView;assembly=Soloplan.WhatsON.GUI">

  <BooleanToVisibilityConverter x:Key="BoolToVisibility" />
  <subjectTreeView:StatusToColorConverter x:Key="StatusToColorConverter" />
  <!-- ToDo DGO: this should be separate control for displaying status. This way it will be easier to reuse.-->

  <ContextMenu x:Key="contextMenuJenkins">
    <MenuItem Header="Open project web page" Command="{Binding OpenWebPage}"/>
  </ContextMenu>

  <ContextMenu x:Key="contextMenuBuild">
    <MenuItem Header="Open build web page" Command="{Binding OpenBuildPage}"/>
  </ContextMenu>

  <DataTemplate DataType="{x:Type jenkins:JenkinsProjectViewModel}">
    <Grid ContextMenu="{StaticResource contextMenuJenkins}" HorizontalAlignment="Stretch">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <StackPanel Grid.Column="0" Orientation="Horizontal">
        <TextBlock Text=" Jenkins: "/>
        <TextBlock FontWeight="Black" Text="{Binding Name}"/>
      </StackPanel>
      <StackPanel Grid.Column="2" Orientation="Horizontal">
        <TextBlock Text=" History: "/>
        <!--<Rectangle Width="10" Height="10" Fill="{Binding CurrentStatus.State, Mode=OneWay, Converter={StaticResource StatusToColorConverter}}"/>-->
        <ListView ItemsSource="{Binding SubjectSnapshots, Mode=OneWay}">
          <!--History builds-->
          <ListView.Resources>
            <DataTemplate DataType="{x:Type jenkins:JenkinsStatusViewModel}">
              <StackPanel ContextMenu="{StaticResource contextMenuBuild}">
                <StackPanel.ToolTip>
                  <StackPanel>
                    <StackPanel Orientation="Horizontal">
                      <TextBlock Text="Build No.: " />
                      <TextBlock Text="{Binding BuildNumber}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                      <TextBlock Text="Duration: "/>
                      <TextBlock>
                        <TextBlock.Text>
                          <MultiBinding StringFormat="{}{0:00}:{1:00}:{2:00}" >
                            <Binding Path="Duration.Hours"/>
                            <Binding Path="Duration.Minutes"/>
                            <Binding Path="Duration.Seconds"/>
                          </MultiBinding>
                        </TextBlock.Text>
                      </TextBlock>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                      <TextBlock  Text="Build date: "/>
                      <TextBlock Text="{Binding Time}"/>
                    </StackPanel>
                  </StackPanel>
                </StackPanel.ToolTip>
                <Button Width="10" Height="10"  Background="{Binding State, Mode=OneWay, Converter={StaticResource StatusToColorConverter}}" 
                        BorderBrush="{Binding State, Mode=OneWay, Converter={StaticResource StatusToColorConverter}}" >
                  <i:Interaction.Triggers>
                    <!--Handle clicking on history builds.-->
                    <i:EventTrigger EventName="Click">
                      <i:InvokeCommandAction Command="{Binding OpenBuildPage}"/>
                    </i:EventTrigger>
                  </i:Interaction.Triggers>
                  <Style TargetType="{x:Type Button}"/>
                </Button>
              </StackPanel>
            </DataTemplate>
          </ListView.Resources>
          <ListView.ItemContainerStyle>
            <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource {x:Type ListViewItem}}">
              <Setter Property="Focusable" Value="false"/>
              <Setter Property="Padding" Value="2"/>
            </Style>
          </ListView.ItemContainerStyle>
          <ListView.ItemsPanel>
            <ItemsPanelTemplate>
              <StackPanel Orientation="Horizontal"></StackPanel>
            </ItemsPanelTemplate>
          </ListView.ItemsPanel>
        </ListView>
      </StackPanel>
      <StackPanel Grid.Row="1" Orientation="Horizontal">
        <TextBlock Text=" Time: "/>
        <TextBlock Text="{Binding CurrentStatus.Time}"/>
        <TextBlock Text=" BuildNumber: "/>
        <TextBlock Text="{Binding CurrentStatus.BuildNumber}"/>
      </StackPanel>
      <WrapPanel Grid.Row="1" Grid.Column="2" x:Name="wrapPanelProgres" Visibility="{Binding CurrentStatus.Building, Converter={StaticResource BoolToVisibility}}">
        <TextBlock Text=" Completion: "/>
        <TextBlock Text="{Binding CurrentStatus.Progres}"/>
        <TextBlock Text="% "/>
        <ProgressBar Width="100" Value="{Binding CurrentStatus.Progres, Mode=OneWay}" materialDesign:TransitionAssist.DisableTransitions="True" />
      </WrapPanel>
    </Grid>

    <DataTemplate.Triggers>
      <DataTrigger Binding="{Binding  Path=CurrentStatus.Building, RelativeSource={RelativeSource FindAncestor, AncestorType=TreeViewItem}}" Value="False">
        <Setter TargetName="wrapPanelProgres" Property="Visibility" Value="Visible" />
      </DataTrigger>
    </DataTemplate.Triggers>
  </DataTemplate>

</ResourceDictionary>